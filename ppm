#!/usr/bin/env bash
set -e

CWD="$(pwd)"
PPM_DIR="$(dirname -- $(readlink -f -- "$0"))"

function ppmInvokeScript() {
    # invoke custom project script or default script
    echo "invoking script... $1"
    projectScript="${CWD}/bin/$1"

    if [ -f "${projectScript}" ]; then
        # call script project side: it replaces default ppm script
        echo "custom project script found. in progress... ${projectScript}"
        echo "--"
        echo
        CWD="${CWD}" PPM_DIR="${PPM_DIR}" "${projectScript}" ${@:2}
    else
        ppmScript="${PPM_DIR}/bin/$1"
        if [ -f "${ppmScript}" ]; then
            # call default ppm script
            echo "default script in progress... ${ppmScript}"
            echo "--"
            echo
            CWD="${CWD}" PPM_DIR="${PPM_DIR}" "${ppmScript}" ${@:2}
        else
            echo "[ERROR] script not found: $1"
        fi
    fi
}
# export ppmInvokeScript: sub invocation inside a ppm script
export -f ppmInvokeScript

function ppmInvokeDefaultScript() {
    # default invocation through a custom project script
    ppmScript="${PPM_DIR}/bin/$1"
    echo "  | base default script in progress... ${ppmScript} |"
    echo

    if [ -f "${ppmScript}" ]; then
        # call default ppm script
        CWD="${CWD}" PPM_DIR="${PPM_DIR}" "${ppmScript}" ${@:2}
    else
        echo "[ERROR] default script not found: $1"
    fi
}
# export ppmInvokeScript: default base invocation through a custom project script
export -f ppmInvokeDefaultScript

echo "ppm ${PPM_DIR} $*"
if [ -f "${CWD}/setup.py" ] || [ -f "${CWD}/setup.cfg" ]; then
    ppmInvokeScript "$1" ${@:2}
else
    echo "[ERROR] current working dir is not a python project"
fi
